version: "3"
services:
  oj-postgres:
    image: postgres:alpine
    container_name: oj-postgres
    restart: always
    volumes:
      - ~/data/oj-postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=oj
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
  oj-redis:
    image: redis:alpine
    container_name: oj-redis
    volumes:
      - ~/data/oj-redis:/data
    restart: always
  oj-rabbitmq:
    image: rabbitmq:management
    container_name: oj-rabbitmq
    restart: always
    hostname: my-rabbit
    ports:
      - '0.0.0.0:5672:5672'
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - ~/data/oj-rabbitmq:/var/lib/rabbitmq
  ddl-backend:
    command: bash /app/docker/entrypoint.sh
    volumes:
      - ~/data/oj-backend:/data
    image: wustacm/oj-backend
    container_name: oj-backend
    restart: always
    depends_on:
      - oj-redis
      - oj-postgres
      - oj-rabbitmq
    environment:
      - REDIS_HOST=oj-redis
      - POSTGRES_HOST=oj-postgres
      - POSTGRES_DB=oj
      - POSTGRES_USER=user
      - POSTGRES_PASS=pass
      - RABBITMQ_HOST=oj-rabbitmq
      - RABBITMQ_USER=guest
      - RABBITMQ_PASS=guest
      - OJ_ENV=production
      - EMAIL_ENABLE=True
      - EMAIL_HOST=sample.com
      - EMAIL_HOST_USER=user@sample.com
      - EMAIL_HOST_PASSWORD=password
      - SECRET_KEY=secret_key
      - JUDGE_TOKEN=judge_token
  oj-web:
    image: wustacm/oj-frontend
    container_name: oj-web
    depends_on:
      - oj-backend
    restart: always
    environment:
      - BACKEND_HOST=oj-backend
      - BACKEND_PORT=8000
    ports:
      - '0.0.0.0:80:80'

